<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xml:base="https://wirtaw.github.io/blog" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Poplavskij Vladimir blog</title>
    <link>https://wirtaw.github.io/blog/pl/feed.xml</link>
    <atom:link href="https://wirtaw.github.io/blog/pl/feed.xml" rel="self" type="application/rss+xml"/>
    <description>Polski</description>
    <language>pl</language>
    
    
    
    
      
      <item>
        <title>Суть зрелости: забота о себе и эмоциональная честность</title>
        <link>https://wirtaw.github.io/blog/pl/blog/essential-of-maturity/</link>
        <description>&lt;p&gt;&lt;strong&gt;Суть зрелости: забота о себе и эмоциональная честность&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Для меня зрелость до неприличия в простом.&lt;br /&gt;
В умении о себе позаботиться.&lt;br /&gt;
Голoден? Утоли.&lt;br /&gt;
Холoдно? Согрейся.&lt;br /&gt;
Дуeт? Пересядь.&lt;br /&gt;
Больно? Не терпи.&lt;br /&gt;
Любишь? Скaжи.&lt;br /&gt;
Не любишь? Скaжи тем более.&lt;br /&gt;
Плохо? Сделай, чтoбы было лучше.&lt;br /&gt;
Хорошо? Не пробегай.&lt;br /&gt;
Просто сделай паузу и получи удoвольствие.&lt;br /&gt;
Делают больно?&lt;br /&gt;
Обрати их внимание на это.&lt;br /&gt;
Не слышат?&lt;br /&gt;
Попробуй ещё.&lt;br /&gt;
Опять не слышат?&lt;br /&gt;
Теряй.&lt;/p&gt;
&lt;p&gt;Научись давать.&lt;br /&gt;
И это, не про деньги.&lt;br /&gt;
Совсем не про деньги.&lt;br /&gt;
Мальчик становится мужчиной, в том числе, когда перестаёт только потреблять.&lt;br /&gt;
Научись давать.&lt;br /&gt;
Девочка становится женщиной, в том числе, когда перестаёт только отдавать.&lt;br /&gt;
Научись брать.&lt;/p&gt;
&lt;p&gt;И наконец научись различать нуждаемость и любовь.&lt;br /&gt;
Уязвимость и слабость&lt;br /&gt;
Заботу и опеку.&lt;br /&gt;
Доброту и подчинённость.&lt;br /&gt;
Доверие и глупость.&lt;br /&gt;
Агрессию и насилие.&lt;/p&gt;
&lt;p&gt;Я думаю, что многие это чувствуют на бессознательном уровне.&lt;br /&gt;
«Сердце не обманешь...» - помнишь?&lt;br /&gt;
Это именно про то самое.&lt;/p&gt;
&lt;p&gt;Но не многие находят в себе силы признаться.&lt;br /&gt;
Например, в том, что их история не про Любовь.&lt;br /&gt;
А про нужду.&lt;/p&gt;
&lt;p&gt;Зрелость, как и мышцу.&lt;br /&gt;
Можно нарастить.&lt;br /&gt;
Нужно только понять зачем это тебе нужно.&lt;/p&gt;
&lt;p&gt;Игорь Ларин&lt;/p&gt;
</description>
        <pubDate>Sun, 17 Nov 2024 08:18:57 +0000</pubDate>
        <dc:creator>Vladimir Poplavskij</dc:creator>
        <guid>https://wirtaw.github.io/blog/pl/blog/essential-of-maturity/</guid>
      </item>
      
    
    
    
    
    
    
    
    
      
      <item>
        <title>Ideały świetlistego rycerza</title>
        <link>https://wirtaw.github.io/blog/pl/blog/idealy-swietlistego-rycerza/</link>
        <description>&lt;p&gt;&lt;em&gt;Pierwszy ideał&lt;/em&gt;: Życie ponad śmiercią. Siła ponad słabością. Podróż ponad celem.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Drugi ideał Wiatrowych&lt;/em&gt;: Chronić tych, którzy nie mogą chronić się sami.&lt;/p&gt;
</description>
        <pubDate>Sat, 16 Nov 2024 14:18:57 +0000</pubDate>
        <dc:creator>Vladimir Poplavskij</dc:creator>
        <guid>https://wirtaw.github.io/blog/pl/blog/idealy-swietlistego-rycerza/</guid>
      </item>
      
    
    
    
    
    
    
    
    
      
      <item>
        <title>Commencer avec le modèle Polyglot Tech Blog</title>
        <link>https://wirtaw.github.io/blog/pl/blog/get-started/</link>
        <description>&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Vous avez découvert Polyglot Tech Blog et vous souhaitez l&#39;utiliser comme base pour votre blog. Génial ! Voyons les étapes à suivre pour obtenir le code et l&#39;adapter à vos besoins.&lt;/p&gt;
&lt;h2&gt;Obtenir le code et installer les dépendances&lt;/h2&gt;
&lt;p&gt;En premier lieu, vous avez besoin du code du modèle. Le moyen le plus simple pour ça est d&#39;utiliser git. Allez dans le répertoire où vous souhaitez mettre les fichiers et clonez le dépôt :&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; clone https://gitlab.com/florent_tassy/polyglot-tech-blog.git&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vous avez ensuite besoin d&#39;installer les dépendances du modèle. Pour ce faire, il vous faut &lt;a href=&quot;https://nodejs.org/&quot;&gt;node&lt;/a&gt; et npm ou &lt;a href=&quot;https://yarnpkg.com/&quot;&gt;Yarn&lt;/a&gt;. Rendez-vous dans le répertoire nouvellement cloné et entrez :&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; ci &lt;span class=&quot;token comment&quot;&gt;# avec npm&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;yarn&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; --frozen-lockfile &lt;span class=&quot;token comment&quot;&gt;# avec Yarn&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Lancer le serveur local et adaptez le modèle&lt;/h2&gt;
&lt;p&gt;Vous avez maintenant tout ce qu&#39;il vous faut. Vous pouvez démarrer le serveur de développement pour voir une version locale et rafraîchie automatiquement de votre code. Depuis le répertoire du modèle, exécutez :&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; run dev &lt;span class=&quot;token comment&quot;&gt;# avec npm&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;yarn&lt;/span&gt; dev &lt;span class=&quot;token comment&quot;&gt;# avec Yarn&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vous pouvez maintenant ouvrir votre navigateur web favori, aller sur &lt;a href=&quot;http://localhost:8080/&quot;&gt;localhost:8080&lt;/a&gt;, et voir le résultat en temps réel !&lt;/p&gt;
&lt;h2&gt;Adapter le contenu&lt;/h2&gt;
&lt;p&gt;La première personnalisation que vous voudrez apporter est certainement le changement du contenu. Voici les concepts à connaître pour réaliser ceci :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Le contenu est dans le répertoire &amp;quot;src&amp;quot;.&lt;/li&gt;
&lt;li&gt;Les pages statiques sont écrites en HTML avec les portions de modèle en &lt;a href=&quot;https://mozilla.github.io/nunjucks/&quot;&gt;Nunjucks&lt;/a&gt;, mais sachez qu&#39;Eleventy &lt;a href=&quot;https://www.11ty.dev/docs/languages/&quot;&gt;propose beaucoup d&#39;autres langages&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Les articles de blog sont écrits en &lt;a href=&quot;https://wikipedia.org/wiki/Markdown&quot;&gt;Markdown&lt;/a&gt;, mais là aussi, d&#39;autres langages sont possibles.&lt;/li&gt;
&lt;li&gt;Les fichiers au premier niveau dans &amp;quot;src&amp;quot; sont essentiellement des fichiers de configuration et des fichiers techniques. Vous pouvez changer le contenu de &lt;code&gt;index.html&lt;/code&gt; et &lt;code&gt;404.html&lt;/code&gt;, mais ces fichiers ne sont pas censés être affichés, sauf si la redirection vers la langue locale ou la langue par défaut échouent. Vous devrez aussi ajouter / modifier vos fichiers de déploiement.&lt;/li&gt;
&lt;li&gt;Vous devez modifier le fichier &lt;code&gt;src &amp;gt; data &amp;gt; data.json&lt;/code&gt; avec vos informations. Voici quelques commentaires utiles à ce sujet :&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;language-json&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;// Le nom complet de la &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// personne écrivant le blog&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;author&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Florent Tassy&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;// Optionnel, mais un plus pour &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// le web sémantique : l&#39;URI &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// unique qui identifie la &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// personne écrivant le blog. &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// Évitez d&#39;utiliser une URL &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// du blog au risque d&#39;obtenir &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// des associations d&#39;ID bizarres&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;authorUri&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://gitlab.com/florent_tassy&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;// Les codes BCP 47 des langues &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// utilisées par le blog. La &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// première est la langue par &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// défaut. Il en faut au moins &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// une.&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;languages&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;fr&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;// Étiquettes des langues. &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// Tous les codes déclarés ci-dessus &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// doivent avoir une étiquette&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// correspondante ici.&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;languageLabels&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;English&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;fr&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Français&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    
    &lt;span class=&quot;token comment&quot;&gt;// Optionnel, mais un plus pour &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// le web sémantique : les URIs&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// qui identifient les langues du&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// blog. http://lexvo.org et &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// https://dbpedia.org proposent&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// des ressources intéressantes &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// ici.&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;languageUris&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;http://dbpedia.org/resource/English_language&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;fr&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;http://dbpedia.org/resource/French_language&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;// Le titre du blog. Tous les &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// codes déclarés ci-dessus &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// doivent avoir une &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// correspondance ici.&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Polyglot Tech Blog&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;fr&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Polyglot Tech Blog&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;// L&#39;URL à laquelle votre blog &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// sera déployé. Ne mettez pas de &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// &quot;/&quot; à la fin. Je vous &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// recommande de la laisser telle &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// quelle et de réaliser la &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// substitution au moment du &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// déploiement.&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;baseUrl&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;http://localhost:8080&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;// Les mots-clés généraux du blog. &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// Il seront utilisés dans les &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// balises &amp;lt;meta&gt; des pages. Là &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// aussi, chaque code de langue &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// défini dans &quot;languages&quot; doit &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// avoir sa correspondance ici.&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;keywords&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;polyglot, multilingual, blog, eleventy, 11ty, starter, template&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;fr&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;polyglotte, multilingue, blog, eleventy, 11ty, départ, modèle&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Vous pouvez personnaliser &lt;code&gt;src &amp;gt; index.html&lt;/code&gt; et &lt;code&gt;src &amp;gt; 404.html&lt;/code&gt;, mais ce n&#39;est pas obligatoire.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Adaptez le style&lt;/h2&gt;
&lt;p&gt;Vous pouvez vous reporter à &lt;a href=&quot;https://wirtaw.github.io/pl/blog/colors&quot;&gt;l&#39;article sur les couleurs&lt;/a&gt; pour de plus amples détails sur cette étape.&lt;/p&gt;
&lt;h2&gt;Ajouter ou retirer des langues&lt;/h2&gt;
&lt;p&gt;Enlever une langue se fait simplement en effaçant le répertoire correspondant et en mettant à jour le fichier &lt;code&gt;src &amp;gt; _data &amp;gt; data.json&lt;/code&gt;. Lorsque l&#39;on ajoute une langue, il y a quelques considérations supplémentaires à avoir, détaillées dans &lt;a href=&quot;https://wirtaw.github.io/pl/blog/add-language&quot;&gt;l&#39;article dédié&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Ajouter des pages statiques&lt;/h2&gt;
&lt;p&gt;Le modèle est fourni avec quatre pages statiques : &amp;quot;Strona główna&amp;quot;, &amp;quot;O mnie&amp;quot;, &amp;quot;Blog&amp;quot; et &amp;quot;404&amp;quot;. Elles sont écrites en HTML et sont disponibles dans chaque répertoire de langue :&lt;/p&gt;
&lt;pre class=&quot;language-plain&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-plain&quot;&gt;src
 ├── (tous les fichiers dans src)
 ├── en
 │   ├── index.html &amp;lt;- la page d&#39;accueil
 │   ├── about.html
 │   ├── blog.html
 │   └── 404.html
 └── fr
     ├── index.html &amp;lt;- la page d&#39;accueil
     ├── about.html
     ├── blog.html
     └── 404.html&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vous pouvez décider d&#39;ajouter d&#39;autres pages statiques. Là aussi, un &lt;a href=&quot;https://wirtaw.github.io/pl/blog/add-page&quot;&gt;article dédié&lt;/a&gt; couvre le sujet.&lt;/p&gt;
&lt;h2&gt;Ajouter des articles&lt;/h2&gt;
&lt;p&gt;Voici probablement la chose la plus évidente attendue d&#39;un modèle de blog. Vous pouvez suivre les instructions de &lt;a href=&quot;https://wirtaw.github.io/pl/blog/add-post&quot;&gt;article dédié&lt;/a&gt; pour ajouter des articles.&lt;/p&gt;
&lt;h2&gt;Vérifiez la validité de vos balises&lt;/h2&gt;
&lt;p&gt;Le modèle comprend des commandes qui et des dépendances pour vérifier la validité du HTML et du CSS générés grâce au &lt;a href=&quot;https://validator.github.io/validator/&quot;&gt;vnu-jar du V3C&lt;/a&gt;. Cependant, vnu-jar est écrit en Java, il vous faudra donc installer un Java Runtime Environment pour exécuter ces commandes. Je vous recommande le libre et excellent &lt;a href=&quot;https://adoptium.net/temurin/&quot;&gt;Eclipse Temurin&lt;/a&gt;.&lt;br /&gt;
Vous pouvez donc vérifier la validité de votre HTML avec :&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; run check:markup:unix &lt;span class=&quot;token comment&quot;&gt;# avec npm sous un système Linux ou unix-like&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;yarn&lt;/span&gt; check:markup:unix &lt;span class=&quot;token comment&quot;&gt;# avec Yarn sous un système Linux ou unix-like&lt;/span&gt;

&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; run check:markup:win &lt;span class=&quot;token comment&quot;&gt;# avec npm sous un système Windows&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;yarn&lt;/span&gt; check:markup:win &lt;span class=&quot;token comment&quot;&gt;# avec Yarn sous un système Windows&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vous pouvez vérifier la validité du CSS avec :&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; run check:css:unix &lt;span class=&quot;token comment&quot;&gt;# avec npm sous un système Linux ou unix-like&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;yarn&lt;/span&gt; check:css:unix &lt;span class=&quot;token comment&quot;&gt;# avec Yarn sous un système Linux ou unix-like&lt;/span&gt;

&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; run check:css:win &lt;span class=&quot;token comment&quot;&gt;# avec npm sous un système Windows&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;yarn&lt;/span&gt; check:css:win &lt;span class=&quot;token comment&quot;&gt;# avec Yarn sous un système Windows&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Vérifiez différents indicateurs de votre blog&lt;/h2&gt;
&lt;p&gt;Le nombre de choses à faire pour s&#39;assurer de &lt;a href=&quot;https://www.w3.org/WAI/&quot;&gt;l&#39;accessibilité&lt;/a&gt; (&lt;abbr title=&quot;Accessibility&quot;&gt;a11y&lt;/abbr&gt;), la performance, &lt;a href=&quot;https://fr.wikipedia.org/wiki/Optimisation_pour_les_moteurs_de_recherche&quot;&gt;l&#39;optimisation pour les moteurs de recherche&lt;/a&gt; (&lt;abbr title=&quot;Search Engine Optimization&quot;&gt;SEO&lt;/abbr&gt;), la validité du code... d&#39;un site web est illimité et demande des compétences et des outils avancés. Quelques tests simples et sont couverts par &lt;a href=&quot;https://wirtaw.github.io/pl/blog/metrics&quot;&gt;un article dédié&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Assemblage et déploiement&lt;/h2&gt;
&lt;p&gt;Notre blog est prêt à être mis en ligne. Cela peut être fait de nombreuses manières selon où votre code se trouve, et qui va héberger le blog. Cet &lt;a href=&quot;https://wirtaw.github.io/pl/blog/deploy&quot;&gt;article&lt;/a&gt; couvre quelques scénarios communs.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Nous avons vu toutes les étapes qui permettent d&#39;obtenir un Polyglot Tech Blog opérationnel avec votre contenu. Si vous avez suivi toutes ces étapes, vous avez désormais un blog en ligne. Félicitations ! Bien sûr, de nombreuses autres modifications et adaptations sont possibles, n&#39;hésitez donc pas à expérimenter et à partager vos idées sur &lt;a href=&quot;https://gitlab.com/florent_tassy/polyglot-tech-blog&quot;&gt;GitLab&lt;/a&gt; 😉&lt;/p&gt;
</description>
        <pubDate>Sun, 09 Jul 2023 12:00:00 +0000</pubDate>
        <dc:creator>Florent Tassy</dc:creator>
        <guid>https://wirtaw.github.io/blog/pl/blog/get-started/</guid>
      </item>
      
    
    
    
    
    
    
    
    
      
      <item>
        <title>Personnaliser les couleurs</title>
        <link>https://wirtaw.github.io/blog/pl/blog/colors/</link>
        <description>&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Les couleurs d&#39;un blog sont l&#39;élément le plus fondamental à choisir pour se sentir chez soi et refléter qui l&#39;on est. Voyons où Polyglot Tech Blog définit ses couleurs afin de les modifier.&lt;/p&gt;
&lt;h2&gt;Modifier le bon fichier&lt;/h2&gt;
&lt;p&gt;Polyglot Tech Blog supporte les fichiers &lt;a href=&quot;https://sass-lang.com/&quot;&gt;SASS&lt;/a&gt;. Il inclut également &lt;a href=&quot;https://jenil.github.io/chota&quot;&gt;le micro-framework CSS Chota&lt;/a&gt;. C&#39;est une feuille de style CSS unique qui fournit assez pour style ce que nous voulons.&lt;/p&gt;
&lt;p&gt;Les couleurs de Chota sont prêtes à être surchargées dans le fichier &lt;code&gt;src &amp;gt; sass &amp;gt; style.scss&lt;/code&gt;. Les 40 premières lignes contiennent les variables CSS et attribuent leurs valeurs pour les thèmes clair et sombre :&lt;/p&gt;
&lt;pre class=&quot;language-css&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;:root&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--bg-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #ffffff&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--bg-secondary-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #f3f3f6&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--color-primary&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #14854f&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--color-lightGrey&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #d2d6dd&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--color-grey&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #747681&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--color-darkGrey&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #3f4144&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--color-error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #d43939&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--color-success&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #2c8017&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--font-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #333333&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--navbar-bg-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #f8bb6d&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--footer-bg-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #f8bb6d&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--transparent-error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;255&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 194&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 204&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0.3&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--transparent-success&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;145&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 238&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 145&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0.3&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--link-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #333333&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--grid-maxWidth&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 120rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--grid-gutter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 2rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--font-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1.6rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--font-family-sans&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; sans-serif&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--font-family-mono&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; monaco&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Consolas&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Lucida Console&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; monospace&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--content-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 75%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token selector&quot;&gt;.dark-theme&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--bg-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #222222&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--bg-secondary-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #333333&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--color-primary&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #4cad7e&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--color-lightGrey&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #323232&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--color-grey&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #747681&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--color-darkGrey&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #8794a8&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--color-error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #d43939&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--color-success&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #28bd14&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--font-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #dddddd&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--navbar-bg-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #741e00&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--footer-bg-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #741e00&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--transparent-error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;255&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 194&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 204&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0.3&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--transparent-success&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;145&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 238&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 145&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0.3&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;--link-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #dddddd&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Changer les couleur de toute la page web, c&#39;est simplement changer les valeurs des variables dans ce fichier.&lt;/p&gt;
&lt;h2&gt;Coloration syntaxique&lt;/h2&gt;
&lt;p&gt;Si vous prévoyez d&#39;utiliser la coloration syntaxique, vous souhaitez peut-être également changer le style de la coloration. Comme vous pouvez l&#39;imaginer, cela se passe dans les fichiers &lt;code&gt;src &amp;gt; css &amp;gt; code-highlight-dark.njk&lt;/code&gt; et &lt;code&gt;src &amp;gt; css &amp;gt; code-highlight-light.njk&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Ces deux modèles contiennent en fait du code CSS et sont traduits par deux feuilles de styles CSS qui sont chargées alternativement suivant le schéma de couleur sélectionné. Par défault, le thème clair est le thème &amp;quot;prism-coy&amp;quot; qui fait partie de PrismJS. N&#39;importe quel thème proposé sous forme de paquet NPM pourrait être ajouté de la même manière..&lt;/p&gt;
&lt;p&gt;Le thème sombre et dérivé du &lt;a href=&quot;https://github.com/PrismJS/prism-themes/blob/master/themes/prism-gruvbox-dark.css&quot;&gt;thème sombre Gruvbox par Azat S.&lt;/a&gt;. Cependant, il a été un peu modifié pour passer les tests automatiques d&#39;accessibilité effectués par &lt;a href=&quot;https://www.deque.com/axe/browser-extensions/&quot;&gt;l&#39;extension de navigateur axe&lt;/a&gt;. Dans ce cas donc, le code CSS a simplement été copié et modifié dans le fichier &lt;code&gt;src &amp;gt; css &amp;gt; code-highlight-dark.njk&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Nous avons vu les fichiers à modifier or remplacer pour changer les couleurs de notre blog. Mais faites preuve de sagesse au moment de choisir vos couleurs et gardez à l&#39;esprit que l&#39;accessibilité dépend pour beaucoup du contraste des couleurs. Si vous souhaitez évaluer l&#39;accessibilité de votre schéma de couleurs, l&#39;article sur les &lt;a href=&quot;https://wirtaw.github.io/pl/blog/metrics&quot;&gt;indicateurs du blog&lt;/a&gt; devrait vous donner du grain à moudre.&lt;/p&gt;
</description>
        <pubDate>Wed, 05 Jul 2023 12:00:00 +0000</pubDate>
        <dc:creator>Florent Tassy</dc:creator>
        <guid>https://wirtaw.github.io/blog/pl/blog/colors/</guid>
      </item>
      
    
    
    
    
    
    
    
    
      
      <item>
        <title>Add language</title>
        <link>https://wirtaw.github.io/blog/pl/blog/add-language/</link>
        <description>&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;div&gt;Polyglot Tech Blog comes in English and French to show in action. However, it is possible to add as many languages as you want. Let&#39;s show how by adding German 🇩🇪&lt;/div&gt;
&lt;h2&gt;Update data.json&lt;/h2&gt;
&lt;p&gt;Simply add the new language:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;src &amp;gt; _data &amp;gt; data.json&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;language-diff-json&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-diff-json&quot;&gt;{
&lt;span class=&quot;token unchanged language-json&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;   &lt;span class=&quot;token comment&quot;&gt;// Other properties&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;token deleted-sign deleted language-json&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;   &lt;span class=&quot;token property&quot;&gt;&quot;languages&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;fr&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted language-json&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;   &lt;span class=&quot;token property&quot;&gt;&quot;languages&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;fr&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;de&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;token unchanged language-json&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;   &lt;span class=&quot;token property&quot;&gt;&quot;languageLabels&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;       &lt;span class=&quot;token property&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;English&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;token deleted-sign deleted language-json&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;       &lt;span class=&quot;token property&quot;&gt;&quot;fr&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Français&quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted language-json&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;       &lt;span class=&quot;token property&quot;&gt;&quot;fr&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Français&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;       &lt;span class=&quot;token property&quot;&gt;&quot;de&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Deutsch&quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;token unchanged language-json&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;   &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;   &lt;span class=&quot;token property&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;       &lt;span class=&quot;token property&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;English&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;token deleted-sign deleted language-json&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;       &lt;span class=&quot;token property&quot;&gt;&quot;fr&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Français&quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted language-json&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;       &lt;span class=&quot;token property&quot;&gt;&quot;fr&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Français&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;       &lt;span class=&quot;token property&quot;&gt;&quot;de&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Deutsch&quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;token unchanged language-json&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;   &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;   &lt;span class=&quot;token property&quot;&gt;&quot;keywords&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;       &lt;span class=&quot;token property&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;blog, english&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;token deleted-sign deleted language-json&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;       &lt;span class=&quot;token property&quot;&gt;&quot;fr&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;blog, français&quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted language-json&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;       &lt;span class=&quot;token property&quot;&gt;&quot;fr&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;blog, français&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;       &lt;span class=&quot;token property&quot;&gt;&quot;de&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;blog, deutsch&quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;token unchanged language-json&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;   &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;}&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Create the language directory&lt;/h2&gt;
&lt;p&gt;The simplest first step here is probably to copy an existing language directory, let&#39;s say &amp;quot;en&amp;quot;, paste it into the src directory, and rename it to the language code you want. Here, we will the rename to directory &amp;quot;de&amp;quot;. So we get this strusture:&lt;/p&gt;
&lt;pre class=&quot;language-plain&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-plain&quot;&gt;src
 ├── (all files in src)
 ├── en
 ├── fr
 └── de&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The folder name must be &lt;a href=&quot;https://en.wikipedia.org/wiki/IETF_language_tag&quot;&gt;BCP 47-compatible language tag&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Change the new directory content&lt;/h2&gt;
&lt;p&gt;First, rename the en.json file to de.json. Then open it and update the translations and the language.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;src &amp;gt; de &amp;gt; de.json&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;language-json&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;lang&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;de&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;home&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Startseite&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;blog&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Blog&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;about&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Über&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;madeBy&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Erstellt von&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;seeOn&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Überprüfen Sie es auf&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;read&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Lesen&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    (...)
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(Here, you should notice that I don&#39;t speak German...)&lt;/p&gt;
&lt;p&gt;Then go to the blog directory, open the blog.json file, and update the &amp;quot;en&amp;quot; tag to &amp;quot;de&amp;quot;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;src &amp;gt; de &amp;gt; blog &amp;gt; blog.json&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;language-diff-json&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-diff-json&quot;&gt;{
&lt;span class=&quot;token unchanged language-json&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;&quot;layout&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;article.html&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;&quot;tags&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;   &lt;span class=&quot;token string&quot;&gt;&quot;post&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;token deleted-sign deleted language-json&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;    &lt;span class=&quot;token string&quot;&gt;&quot;en&quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted language-json&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;    &lt;span class=&quot;token string&quot;&gt;&quot;de&quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;token unchanged language-json&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;}&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Update the permalinks&lt;/h2&gt;
&lt;p&gt;Ensure that no permalink in the &amp;quot;de&amp;quot; directory points to a &amp;quot;en/...&amp;quot; URL.&lt;/p&gt;
&lt;h2&gt;Now, the longest part if you have some content already...&lt;/h2&gt;
&lt;p&gt;Translate all the pages and blog posts to German!&lt;/p&gt;
&lt;h2&gt;Change default language&lt;/h2&gt;
&lt;p&gt;If you want to change the blog default language, please also update the &amp;quot;defaultLanguage&amp;quot; property in &lt;code&gt;.eleventy.js&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;That&#39;s it, we have added a new language to our webpage! More information on &lt;a href=&quot;https://www.11ty.dev/docs/i18n/&quot;&gt;11ty i18n documentation&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 02 Jul 2023 12:00:00 +0000</pubDate>
        <dc:creator>Florent Tassy</dc:creator>
        <guid>https://wirtaw.github.io/blog/pl/blog/add-language/</guid>
      </item>
      
    
    
    
    
    
    
    
    
      
      <item>
        <title>Ajouter une page</title>
        <link>https://wirtaw.github.io/blog/pl/blog/add-page/</link>
        <description>&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Polyglot Tech Blog contient trois pages :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Accueil, la page par défaut&lt;/li&gt;
&lt;li&gt;À propos&lt;/li&gt;
&lt;li&gt;Blog, ou tous les articles de blog sont listés
... ainsi qu&#39;une page d&#39;erreur 404.&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;Que faire si je souhaite ajouter une nouvelle page statique ? Ajoutons une page &quot;Portefeuille&quot; pour montrer comment faire.&lt;/div&gt;
&lt;h2&gt;Ajouter les fichiers&lt;/h2&gt;
&lt;p&gt;Dans chacun de vos répertoires &amp;quot;langue&amp;quot;, créez un fichier nommé &amp;quot;portfolio.html&amp;quot;. TCe nom doit être le même dans tous vos répertoires &amp;quot;langue&amp;quot;. Le nom d fichier détermine ce que sera l&#39;URL de la page. Ici, ce sera quelque chose de la forme https://&amp;lt;my-domain&amp;gt;/&amp;lt;language&amp;gt;/portofio.html.&lt;/p&gt;
&lt;p&gt;Vous devriez avoir la structure suivante :&lt;/p&gt;
&lt;pre class=&quot;language-plain&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-plain&quot;&gt;src
 ├── (fichiers dans src)
 ├── en
 │   ├── (fichier dans en)
 │   └── porfolio.html
 └── fr
     ├── (fichiers dans fr)
     └── portfolio.html&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ajoutez le contenu à vos fichier avec le front matter ci-après :&lt;/p&gt;
&lt;p&gt;&lt;code&gt;fr &amp;gt; portfolio.html&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;language-plain&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-plain&quot;&gt;---
title: &quot;Portefeuille&quot;
layout: &quot;base.html&quot;
---

&amp;lt;div class=&quot;container&quot;&gt;
    &amp;lt;p&gt;
        Voici mon contenu. &amp;lt;br&gt;
        Je l&#39;écris en anglais dans le répertoire &quot;en&quot;. &amp;lt;br&gt;
        Et bien sûr, je l&#39;écris en français dans le répertoire &quot;fr&quot;.
    &amp;lt;/p&gt;
&amp;lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;👍 C&#39;est fait, vous avez une nouvelle page statique !&lt;/p&gt;
&lt;h2&gt;Optionnel: Ajouter une entrée dans la barre de navigation&lt;/h2&gt;
&lt;p&gt;Cette étape est optionnelle. Si vous souhaitez avoir un lien vers la page portefeuille dans la barre de naviagtion, vous devez faire les modifications suivantes :&lt;/p&gt;
&lt;p&gt;&lt;code&gt;src &amp;gt; _includes &amp;gt; components &amp;gt; navbar.html&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;language-html&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;        &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- Pages --&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;tabs&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;{{ &#39;/&#39; | locale_url | url }}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;{{ home }}&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
+           &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;{{ &#39;/portfolio&#39; | locale_url | url }}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;{{ portfolio }}&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;{{ &#39;/about&#39; | locale_url | url }}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;{{ about }}&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;{{ &#39;/blog&#39; | locale_url | url }}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;{{ blog }}&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Enfin, le &lt;code&gt;{{ portfolio }}&lt;/code&gt; fait référence à une variable qui doit être ajoutée dans les fichiers en.json et fr.json :&lt;/p&gt;
&lt;p&gt;&lt;code&gt;src &amp;gt; fr &amp;gt; fr.json&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;language-diff-json&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-diff-json&quot;&gt;{
&lt;span class=&quot;token unchanged language-json&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;   &lt;span class=&quot;token property&quot;&gt;&quot;lang&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;fr&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;   &lt;span class=&quot;token property&quot;&gt;&quot;home&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Accueil&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;   &lt;span class=&quot;token property&quot;&gt;&quot;blog&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Blog&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;   &lt;span class=&quot;token property&quot;&gt;&quot;about&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;À propos&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;   &lt;span class=&quot;token property&quot;&gt;&quot;madeBy&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Codé par&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;   &lt;span class=&quot;token property&quot;&gt;&quot;seeOn&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Retrouvez-moi sur&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;token deleted-sign deleted language-json&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;   &lt;span class=&quot;token property&quot;&gt;&quot;read&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Lire&quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted language-json&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;   &lt;span class=&quot;token property&quot;&gt;&quot;read&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Lire&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;   &lt;span class=&quot;token property&quot;&gt;&quot;portfolio&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Portefeuille&quot;&lt;/span&gt;
&lt;/span&gt;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;src &amp;gt; en &amp;gt; en.json&lt;/code&gt; :&lt;/p&gt;
&lt;pre class=&quot;language-diff-json&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-diff-json&quot;&gt;{
&lt;span class=&quot;token unchanged language-json&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;   &lt;span class=&quot;token property&quot;&gt;&quot;lang&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;   &lt;span class=&quot;token property&quot;&gt;&quot;home&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Home&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;   &lt;span class=&quot;token property&quot;&gt;&quot;blog&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Blog&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;   &lt;span class=&quot;token property&quot;&gt;&quot;about&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;About&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;   &lt;span class=&quot;token property&quot;&gt;&quot;madeBy&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Made by&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;   &lt;span class=&quot;token property&quot;&gt;&quot;seeOn&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Check it out on&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;token deleted-sign deleted language-json&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;   &lt;span class=&quot;token property&quot;&gt;&quot;read&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Read&quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted language-json&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;   &lt;span class=&quot;token property&quot;&gt;&quot;read&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Read&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;   &lt;span class=&quot;token property&quot;&gt;&quot;portfolio&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Portfolio&quot;&lt;/span&gt;
&lt;/span&gt;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Désormais, votre page est accessible depuis la barre de navigation 🥳&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Nous avons ajouté une nouvelle page statique &amp;quot;Portefeuille&amp;quot; à notre blog. Voilà qui ouvre de nombreuses possibilités 🤩&lt;/p&gt;
</description>
        <pubDate>Fri, 30 Jun 2023 12:00:00 +0000</pubDate>
        <dc:creator>Florent Tassy</dc:creator>
        <guid>https://wirtaw.github.io/blog/pl/blog/add-page/</guid>
      </item>
      
    
    
    
    
    
    
    
    
      
      <item>
        <title>Ajouter un article</title>
        <link>https://wirtaw.github.io/blog/pl/blog/add-post/</link>
        <description>&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Schématiquement, un blog est constitué de quelques pages statiques et de beaucoup d&#39;articles. Voyons comment créer un article dans chacune des langues prises en charge par notre blog.&lt;/p&gt;
&lt;h2&gt;Créer les fichiers&lt;/h2&gt;
&lt;p&gt;Il s&#39;agit probablement de l&#39;un des choses les plus faciles à faire avec le modèle. Lorsque l&#39;on veut ajouter un article, il suffit de créer un fichier avec le &lt;strong&gt;même nom&lt;/strong&gt; dans &lt;strong&gt;chaque répertoire de langue&lt;/strong&gt;. Par exemple, je veux écrire sur les dauphins en Arctique dans mon blog en français / anglais. Je vais ajouter les fichiers suivants :&lt;/p&gt;
&lt;pre class=&quot;language-plain&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-plain&quot;&gt;src
 ├── (tous les fichiers dans src)
 ├── en
 │   ├── (tous les fichiers dans en)
 │   └── blog
+│        └── dolphins-in-arctic.md
 └── fr
     ├── (tous les fichiers dans fr)
     └── blog
+         └── dolphins-in-arctic.md&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Le format suggéré ici est le &lt;a href=&quot;https://fr.wikipedia.org/wiki/Markdown&quot;&gt;Markdown&lt;/a&gt;, mais les autres &lt;a href=&quot;https://www.11ty.dev/docs/languages/&quot;&gt;formats supportés par 11ty&lt;/a&gt; fonctionneraient aussi.&lt;/p&gt;
&lt;h2&gt;Ajoutez le contenu aux fichiers&lt;/h2&gt;
&lt;p&gt;Dans chacun des fichiers nouvellement ajoutés, je peux maintenant ajouter mon contenu. Mais avant tout, le &lt;em&gt;front matter&lt;/em&gt; suivant est attendu :&lt;/p&gt;
&lt;pre class=&quot;language-plain&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-plain&quot;&gt;title: Dauphins en Arctique (À traduire dans le répertoire en)
description: Un article de blog sur des dauphins en Arctique (À traduire dans le répertoire en)
date: 2010-05-25T12:00:00
update: 2023-05-28T12:00:00 (Celle-ci est optionnelle, mais si vous mettez un article existant
à jour, vous pouvez mettre la date de mise à jour ici)
author: Le nom de l&#39;auteur ici, qui peut différer de celui dans src &gt; _data &gt; data.json &gt; &quot;author&quot;
tags: 
    - dauphin (À traduire dans le répertoire en)
    - Arctique (À traduire dans le répertoire en)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pour le reste, notez que :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Eleventy ajoutera automatiquement un titre de niveau un à partir du front matter. Vous devez donc ajouter des titres de niveau deux et inférieurs pour garder un HTML valide ;&lt;/li&gt;
&lt;li&gt;si vous souhaitez inclure un lien vers un autre article du blog, par exemple article.md, la syntaxe est la suivante : &lt;code&gt;[hyperlink text]({{ &#39;/blog/example&#39; | locale_url | url }})&lt;/code&gt; ;&lt;/li&gt;
&lt;li&gt;pour inclure un lien vers une ressource statique du blog (document, image...), par exemple image.png, la syntaxe est la suivante : &lt;code&gt;![description de l&#39;image]({{ &#39;/img/image.png&#39; | url }})&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;C&#39;est fait ✅ mon nouvel article est maintenant disponible à l&#39;adresse https://&amp;lt;my-domain&amp;gt;/&amp;lt;language&amp;gt;/blog/dolphins-in-artic.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;À travers cet exemple, nous avons ajouté un nouvel article au blog. Comme vous avez pu le voir, cele consiste en deux étapes seulement, donc vous devriez rapidement vous en rappeler par coeur 😉&lt;/p&gt;
</description>
        <pubDate>Fri, 23 Jun 2023 12:00:00 +0000</pubDate>
        <dc:creator>Florent Tassy</dc:creator>
        <guid>https://wirtaw.github.io/blog/pl/blog/add-post/</guid>
      </item>
      
    
    
    
    
    
    
    
    
      
      <item>
        <title>Vérifier les indicateurs du blog</title>
        <link>https://wirtaw.github.io/blog/pl/blog/metrics/</link>
        <description>&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Nous allons maintenant vérifier quelques indicateurs et présenter des outils simples et faciles de prise en main pour assurer la validité, les performance, l&#39;accessibilité et la &lt;abbr title=&quot;Search Engine Optimization&quot;&gt;SEO&lt;/abbr&gt; de notre blog. Ces sujets sont potentiellement infinis et très pointus, c&#39;est pourquoi nous ne ferons qu&#39;effleurer chacun d&#39;entre eux à l&#39;aide d&#39;outils automatiques.&lt;/p&gt;
&lt;h2&gt;Lighthouse&lt;/h2&gt;
&lt;p&gt;Un bon moyen de vérifier une page web rapidement et simplement est d&#39;utiliser &lt;a href=&quot;https://developer.chrome.com/docs/lighthouse/overview/&quot;&gt;Lighthouse&lt;/a&gt;. Cet outil est disponible parmi les outils de développement des &lt;a href=&quot;https://fr.wikipedia.org/wiki/Chromium#Autres_navigateurs_fond%C3%A9s_sur_Chromium&quot;&gt;navigateurs dérivés de Chromium&lt;/a&gt;, ce qui signifie qu&#39;il peut être utilisé en développement sur localhost. Il existe aussi en tant que service en ligne sur &lt;a href=&quot;https://pagespeed.web.dev/&quot;&gt;PageSpeed Insights&lt;/a&gt;, mais cela implique que la page doit déjà être hébergée en ligne.&lt;/p&gt;
&lt;p&gt;Lighthouse fournit des indicateurs et des conseils pour améliorer la performance, l&#39;accessibilité, la &lt;abbr title=&quot;Search Engine Optimization&quot;&gt;SEO&lt;/abbr&gt; et d&#39;autres bonnes pratiques, et il peut fonctionner pour les pages en configuration mobile ou bureau. Nous sous-estimez pas les appareils mobiles car plus de la moitié des pages web sont visionnées sur un appareil mobile d&#39;après &lt;a href=&quot;https://gs.statcounter.com/platform-market-share/desktop-mobile-tablet&quot;&gt;statcounter&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Accessibilité&lt;/h2&gt;
&lt;p&gt;Quand on parle d&#39;accessibilité, &lt;abbr title=&quot;Web Accessibility Evaluation Tools&quot;&gt;WAVE&lt;/abbr&gt; et &lt;a href=&quot;https://www.deque.com/axe/&quot;&gt;axe Tools&lt;/a&gt; sont de très bons outils pour évaluer automatiquement les performances de votre page web. Un moyen très simple de les utiliser est d&#39;installer les extensions de navigateur &lt;a href=&quot;https://wave.webaim.org/extension/&quot;&gt;WAVE&lt;/a&gt; et &lt;a href=&quot;https://www.deque.com/axe/browser-extensions/&quot;&gt;axe DevTools&lt;/a&gt;. Elles fonctionnent toutes les deux pour des pages locales ou en ligne et proposent de nombreux tests et conseils, comme par exemple pour les contrastes des couleurs.&lt;/p&gt;
&lt;h2&gt;Validité du code&lt;/h2&gt;
&lt;p&gt;Pour la validité du code, vous savez probablement déjà que le modèle Polyglot Tech Blog permet de tester le HTML et le CSS grâce au &lt;a href=&quot;https://validator.github.io/validator/&quot;&gt;vnu-jar du W3C&lt;/a&gt;. Cependant, le W3C maintient de nombreux autres &lt;a href=&quot;https://www.w3.org/developers/tools/&quot;&gt;outils&lt;/a&gt; très utiles qui peuvent être utilisés pour vérifier la validité de votre code. On mentionnera ici la validation de &lt;a href=&quot;https://validator.w3.org/i18n-checker/&quot;&gt;l&#39;internationalisation&lt;/a&gt; et des &lt;a href=&quot;https://validator.w3.org/feed/&quot;&gt;flux&lt;/a&gt;, pour en citer deux applicables au Polyglot Tech Blog.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Nous avons vu différents outils pour évaluer et améliorer votre code en termes de validité, performance, accessibilité et &lt;abbr title=&quot;Search Engine Optimization&quot;&gt;SEO&lt;/abbr&gt;. Mais finalement, tous ces éléments sont intimement liés : du code invalide ne sera pas bien interprété, menant à des problèmes de performance, et il ne sera donc pas bien géré par les outils d&#39;accessibilité et mal référencé par les moteurs de recherche. Ces outils fournissent donc différents points de vue et conseils sur votre code. Ils sont complémentaires et, puisqu&#39;ils sont tous automatiques, ils ont des limites inhérentes à ce qu&#39;ils peuvent détecter.&lt;/p&gt;
</description>
        <pubDate>Thu, 15 Jun 2023 12:00:00 +0000</pubDate>
        <dc:creator>Florent Tassy</dc:creator>
        <guid>https://wirtaw.github.io/blog/pl/blog/metrics/</guid>
      </item>
      
    
    
    
    
    
    
    
    
      
      <item>
        <title>Déploiement</title>
        <link>https://wirtaw.github.io/blog/pl/blog/deploy/</link>
        <description>&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;div&gt;Maintenant que nous avons adapté le modèle avec notre contenu, il est temps de le déployer sur le web. Passons au travers de quelques scénarios de déploiement communs.&lt;/div&gt;
&lt;h2&gt;Déploiement manuel&lt;/h2&gt;
&lt;p&gt;Afin d&#39;avoir des hyperliens corrects, vous devez connaître l&#39;URL sur laquelle le site sera déployé. Créez un fichier nommé &lt;code&gt;prod.js&lt;/code&gt; à la racine du blog et remplissez-le avec l&#39;URL de base de votre site ainsi que le sous-répertoire dans lequel il sera déployé. Par exemple, s&#39;il doit &#39;etre déployé à l&#39;adresse https://example.com/subpath, le fichier devrait contenir :&lt;/p&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;token literal-property property&quot;&gt;baseUrl&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://example.com/subpath&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Notez l&#39;absence de &quot;/&quot; à la fin de l&#39;URL&lt;/span&gt;
    &lt;span class=&quot;token literal-property property&quot;&gt;pathPrefix&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;subpath&quot;&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;S&#39;il n&#39;y a pas de sous-répertoire, laissez la valeur vide : &lt;code&gt;pathPrefix: &amp;quot;&amp;quot;&lt;/code&gt;. S&#39;il y a un sous-répertoire, vous pouvez effacer le fichier &lt;code&gt;robots.txt&lt;/code&gt; car il ne sera pas lu.&lt;/p&gt;
&lt;p&gt;Nous pouvons maintenant empaqueter le blog, c&#39;est-à-dire traiter tous les fichiers du répertoire &lt;code&gt;src&lt;/code&gt; afin de générer les fichiers HTML, JavaScript, CSS et autres fichiers statiques qui seront placés sur le serveur. Je vous recommande de suivre les étapes suivantes :&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Arrêtez le serveur de développement local s&#39;il tourne.&lt;/li&gt;
&lt;li&gt;Videz le répertoire &lt;code&gt;public&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; run clean &lt;span class=&quot;token comment&quot;&gt;# avec npm&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;yarn&lt;/span&gt; clean &lt;span class=&quot;token comment&quot;&gt;# avec Yarn&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;Empaquetez le blog prêt au déploiement&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; run manual:build &lt;span class=&quot;token comment&quot;&gt;# avec npm&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;yarn&lt;/span&gt; manual:build &lt;span class=&quot;token comment&quot;&gt;# avec Yarn&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vous n&#39;avez ensuite plus qu&#39;à copier le contenu du répertoire &lt;code&gt;public&lt;/code&gt; sur le serveur.&lt;/p&gt;
&lt;h2&gt;Déploiement sur GitLab Pages&lt;/h2&gt;
&lt;p&gt;Le modèle propose un fichier &lt;code&gt;.gitlab-ci.yml&lt;/code&gt; qui devrait déployer le blog correctement. Vous avez seulement besoin d&#39;adapter le fichier &lt;code&gt;gitlab-pages.js&lt;/code&gt; :&lt;/p&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;token literal-property property&quot;&gt;baseUrl&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://florent_tassy.gitlab.io/polyglot-tech-blog&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Notez l&#39;absence de &quot;/&quot; à la fin de l&#39;URL&lt;/span&gt;
    &lt;span class=&quot;token literal-property property&quot;&gt;pathPrefix&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;polyglot-tech-blog&quot;&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;quot;Poussez&amp;quot; ensuite le dépôt sur votre instance de GitLab. Si le dépôt distant pest correctement configuré, la pipeline de CI/CD va déployer le blog.&lt;/p&gt;
&lt;h2&gt;Déploiement sur Netlify&lt;/h2&gt;
&lt;p&gt;Vous pouvez vous réferrer à la &lt;a href=&quot;https://docs.netlify.com/git/overview/&quot;&gt;documentation de Netlify&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Pour un déploiement manuel, le modèle fournit un fichier &lt;code&gt;netlify.js&lt;/code&gt; à adapter pour empaqueter le blog convaneblement :&lt;/p&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;token literal-property property&quot;&gt;baseUrl&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://polyglot-tech-blog.netlify.app&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Notez l&#39;absence de &quot;/&quot; à la fin de l&#39;URL&lt;/span&gt;
    &lt;span class=&quot;token literal-property property&quot;&gt;pathPrefix&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vous pouvez maintenant empaqueter le blog en suivant les étapes ci-après :&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Arrêtez le serveur de développement local s&#39;il tourne.&lt;/li&gt;
&lt;li&gt;Videz le répertoire &lt;code&gt;public&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; run clean &lt;span class=&quot;token comment&quot;&gt;# avec npm&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;yarn&lt;/span&gt; clean &lt;span class=&quot;token comment&quot;&gt;# avec Yarn&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;Empaquetez le blog prêt au déploiement&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; run netlify:build &lt;span class=&quot;token comment&quot;&gt;# avec npm&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;yarn&lt;/span&gt; netlify:build &lt;span class=&quot;token comment&quot;&gt;# avec Yarn&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vous pouvez maintenant vous connecter à Netlify et glisser-déposer le répertoire &lt;code&gt;public&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Déploiement sur GitHub Pages&lt;/h2&gt;
&lt;p&gt;Le modèle propose un fichier &lt;code&gt;.github &amp;gt; workflows &amp;gt; build-and-deploy.yml&lt;/code&gt; qui devrait déployer le blog correctement. Vous avez seulement besoin d&#39;adapter le fichier &lt;code&gt;github-pages.js&lt;/code&gt; :&lt;/p&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;token literal-property property&quot;&gt;baseUrl&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://ftassy.github.io/Polyglot-Tech-Blog&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Notez l&#39;absence de &quot;/&quot; à la fin de l&#39;URL&lt;/span&gt;
    &lt;span class=&quot;token literal-property property&quot;&gt;pathPrefix&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Polyglot-Tech-Blog&quot;&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;quot;Poussez&amp;quot; ensuite le code sur GitHub. Si le dépôt distant est correctement configuré, la GitHub Action va déployer le blog.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Nous avons vu comment déployer notre blog sur un serveur de manière manuelle et sur les services d&#39;hébergement GitLab Pages, GitHub Pages et Netlify. Si votre scénario n&#39;est pas couvert ici, vous devriez pouvoir adapter un de ceux proposés à votre cas spécifique. Félications, votre blog est maintenant en ligne !&lt;/p&gt;
</description>
        <pubDate>Sun, 11 Jun 2023 12:00:00 +0000</pubDate>
        <dc:creator>Florent Tassy</dc:creator>
        <guid>https://wirtaw.github.io/blog/pl/blog/deploy/</guid>
      </item>
      
    
    
    
    
    
  </channel>
</rss>
